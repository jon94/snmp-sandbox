version: '3.5'

services:
  docker-usage:
    image: nginx
    volumes:
       - ./docker-usage/docker-usage.sh:/docker-usage.sh
    environment:
      - script_path=${PWD}
      - user=${USER}
    command: sh -c "./docker-usage.sh"

  snmp:
    container_name: dd-snmp
    image: "tandrup/snmpsim:latest"
    ports:
      - "161:161/udp"
    volumes:
      # - ./data-icore/:/usr/local/share/snmpsim/data
      - ./data/:/usr/local/share/snmpsim/data
    labels:
      com.datadoghq.ad.check_names: '["snmp", "snmp"]'
      com.datadoghq.ad.init_configs: '[{}, {}]'
      com.datadoghq.ad.instances: |
        [
        { "ip_address": "%%host%%", "port": "161", "community_string": "f5" },
        { "ip_address": "%%host%%", "port": "161", "community_string": "ciscoasa" }
        ]
    networks:
      - my-net

  datadog:
    container_name: datadog-agent
    image: datadog/agent:latest
    environment:
      ## GLOBALS
      - DD_API_KEY
      - DD_SITE
      - DD_HOSTNAME=narbais.sandbox
      - DD_TAGS=env:dev owner:narbais
      - DD_AC_EXCLUDE=name:datadog-agent # exclude this container from data collection
      # - DD_AC_EXCLUDE=name:.*
      # - DD_AC_INCLUDE=name:dd-snmp
      ## TAGS
      - DD_DOCKER_LABELS_AS_TAGS=true
      - DD_DOCKER_ENV_AS_TAGS=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
    networks:
      - my-net # Created with docker network create my-net and deleted with docker network rm my-net

networks:
  my-net:
    external: true
